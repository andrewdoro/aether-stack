---
export interface Props {
  title: string;
}
import { auth } from "@packages/auth";
import Header from "../components/Header";
const { title } = Astro.props;

const authRequest = auth.handleRequest(Astro);
const { user } = await authRequest.validateUser();
---

<!DOCTYPE html>
<html lang='en'>
  <head>
    <script is:inline>
      const theme = (() => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
          const item = localStorage.getItem("theme");
          const mode = JSON.parse(item).mode;
          return mode === "dark" ? "dark" : "light";
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
      window.localStorage.setItem("theme", JSON.stringify({ mode: theme }));
    </script>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class='bg-base flex flex-col'>
    <Header client:load user={user} />
    <main class='max-w-5xl mx-auto w-full bg-paper p-4 rounded-lg border border-gray-6'>
      <slot />
    </main>
  </body>
</html>
